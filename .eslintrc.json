{
	"env": {
		"node": true,
		"commonjs": true,
		"es2022": true,
		"jest/globals": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:jsdoc/recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"impliedStrict": true,
			"jsx": true
		},
		"ecmaVersion": "latest",
		"project": "./tsconfig.json"
	},
	"plugins": ["jsdoc", "react", "@typescript-eslint"],
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"globals": {
		"NodeJS": true
	},
	"rules": {
		// ESLint
		"accessor-pairs": [
			"error",
			{
				"getWithoutSet": true
			}
		],
		"array-bracket-newline": ["error", "never"],
		"array-bracket-spacing": "error",
		"array-callback-return": [
			"error",
			{
				"checkForEach": true
			}
		],
		"array-element-newline": [
			"error",
			"never",
			{
				"multiline": true
			}
		],
		"arrow-body-style": ["error", "always"],
		"arrow-parens": "error",
		"arrow-spacing": "error",
		"block-scoped-var": "error",
		"block-spacing": "error",
		"camelcase": "error",
		"class-methods-use-this": "error",
		"comma-style": "error",
		"complexity": "error",
		"computed-property-spacing": "error",
		"consistent-return": "error",
		"consistent-this": ["error", "self"],
		"curly": "error",
		"default-case": "error",
		"default-case-last": "error",
		"dot-location": ["error", "property"],
		"eol-last": "error",
		"eqeqeq": "error",
		"func-name-matching": [
			"error",
			{
				"considerPropertyDescriptor": true,
				"includeCommonJSModuleExports": true
			}
		],
		"func-names": "error",
		"func-style": [
			"error",
			"declaration",
			{
				"allowArrowFunctions": true
			}
		],
		"function-call-argument-newline": ["error", "consistent"],
		"function-paren-newline": ["error", "consistent"],
		"generator-star-spacing": [
			"error",
			{
				"after": true
			}
		],
		"grouped-accessor-pairs": ["error", "getBeforeSet"],
		"guard-for-in": "error",
		"id-denylist": "error",
		"id-length": [
			"error",
			{
				"exceptions": ["i", "j"]
			}
		],
		"id-match": "error",
		"implicit-arrow-linebreak": "error",
		"jsx-quotes": "error",
		"key-spacing": "error",
		"linebreak-style": ["error", "unix"],
		"lines-around-comment": [
			"error",
			{
				"afterBlockComment": false,
				"afterLineComment": false,
				"allowBlockEnd": false,
				"allowBlockStart": true,
				"allowClassEnd": false,
				"allowObjectEnd": false,
				"allowArrayEnd": false
			}
		],
		"max-classes-per-file": "error",
		"max-statements-per-line": "error",
		"multiline-ternary": ["error", "always-multiline"],
		"new-cap": [
			"error",
			{
				"capIsNewExceptions": ["Router"]
			}
		],
		"new-parens": "error",
		"no-alert": "error",
		"no-await-in-loop": "error",
		"no-bitwise": "error",
		"no-caller": "error",
		"no-cond-assign": ["error", "always"],
		"no-confusing-arrow": [
			"error",
			{
				"allowParens": false
			}
		],
		"no-constructor-return": "error",
		"no-continue": "error",
		"no-div-regex": "error",
		"no-else-return": "error",
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": false
			}
		],
		"no-eq-null": "error",
		"no-eval": "error",
		"no-extend-native": "error",
		"no-extra-bind": "error",
		"no-extra-boolean-cast": [
			"error",
			{
				"enforceForLogicalOperands": true
			}
		],
		"no-extra-label": "error",
		"no-fallthrough": [
			"error",
			{
				"commentPattern": "break\\sunecessary"
			}
		],
		"no-floating-decimal": "error",
		"no-implicit-coercion": "error",
		"no-implicit-globals": "error",
		"no-inner-declarations": ["error", "both"],
		"no-iterator": "error",
		"no-label-var": "error",
		"no-labels": "error",
		"no-lone-blocks": "error",
		"no-lonely-if": "error",
		"no-mixed-operators": "error",
		"no-multi-assign": "error",
		"no-multi-spaces": "error",
		"no-multi-str": "error",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1,
				"maxEOF": 0,
				"maxBOF": 0
			}
		],
		"no-negated-condition": "error",
		"no-nested-ternary": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-object": "error",
		"no-new-wrappers": "error",
		"no-octal-escape": "error",
		"no-param-reassign": "error",
		"no-promise-executor-return": "error",
		"no-proto": "error",
		"no-return-assign": ["error", "always"],
		"no-script-url": "error",
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-tabs": [
			"error",
			{
				"allowIndentationTabs": true
			}
		],
		"no-template-curly-in-string": "error",
		"no-trailing-spaces": "error",
		"no-undef": [
			"error",
			{
				"typeof": true
			}
		],
		"no-undef-init": "error",
		"no-undefined": "error",
		"no-underscore-dangle": [
			"error",
			{
				"enforceInMethodNames": true,
				"allowFunctionParams": true
			}
		],
		"no-unmodified-loop-condition": "error",
		"no-unneeded-ternary": "error",
		"no-unreachable-loop": "error",
		"no-unsafe-negation": [
			"error",
			{
				"enforceForOrderingRelations": true
			}
		],
		"no-unsafe-optional-chaining": [
			"error",
			{
				"disallowArithmeticOperators": true
			}
		],
		"no-useless-call": "error",
		"no-useless-computed-key": [
			"error",
			{
				"enforceForClassMembers": true
			}
		],
		"no-useless-concat": "error",
		"no-useless-rename": "error",
		"no-useless-return": "error",
		"no-var": "error",
		"no-void": "error",
		"no-warning-comments": "error",
		"no-whitespace-before-property": "error",
		"nonblock-statement-body-position": "error",
		"object-curly-newline": [
			"error",
			{
				"ImportDeclaration": "never"
			}
		],
		"object-property-newline": "error",
		"object-shorthand": "error",
		"one-var-declaration-per-line": "error",
		"operator-assignment": "error",
		"operator-linebreak": [
			"error",
			"after",
			{
				"overrides": {
					"?": "before",
					":": "before"
				}
			}
		],
		"padded-blocks": ["error", "never"],
		"prefer-arrow-callback": "error",
		"prefer-const": "error",
		"prefer-destructuring": [
			"error",
			{
				"array": false,
				"object": false
			}
		],
		"prefer-exponentiation-operator": "error",
		"prefer-named-capture-group": "error",
		"prefer-numeric-literals": "error",
		"prefer-object-spread": "error",
		"prefer-promise-reject-errors": "error",
		"prefer-regex-literals": [
			"error",
			{
				"disallowRedundantWrapping": true
			}
		],
		"prefer-rest-params": "error",
		"prefer-spread": "error",
		"prefer-template": "error",
		"quote-props": ["error", "as-needed"],
		"radix": ["error", "as-needed"],
		"require-atomic-updates": "error",
		"require-unicode-regexp": "error",
		"rest-spread-spacing": "error",
		"semi-spacing": "error",
		"semi-style": "error",
		"sort-imports": [
			"error",
			{
				"ignoreCase": true
			}
		],
		"space-before-blocks": "error",
		"space-in-parens": "error",
		"space-unary-ops": "error",
		"spaced-comment": [
			"error",
			"always",
			{
				"line": {
					"markers": ["#region", "#endregion"]
				}
			}
		],
		"strict": "error",
		"switch-colon-spacing": "error",
		"symbol-description": "error",
		"template-curly-spacing": "error",
		"template-tag-spacing": ["error", "always"],
		"unicode-bom": "error",
		"use-isnan": [
			"error",
			{
				"enforceForIndexOf": true
			}
		],
		"valid-typeof": [
			"error",
			{
				"requireStringLiterals": true
			}
		],
		"vars-on-top": "error",
		"wrap-iife": [
			"error",
			"inside",
			{
				"functionPrototypeMethods": true
			}
		],
		"wrap-regex": "error",
		"yield-star-spacing": ["error", "both"],
		"yoda": ["error", "never"],

		// TypeScript ESLint
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/class-literal-property-style": "error",
		"@typescript-eslint/consistent-indexed-object-style": "error",
		"@typescript-eslint/consistent-type-assertions": "error",
		"@typescript-eslint/consistent-type-definitions": "error",
		"@typescript-eslint/consistent-type-exports": "error",
		"@typescript-eslint/explicit-function-return-type": "error",
		"@typescript-eslint/explicit-member-accessibility": "error",
		"@typescript-eslint/explicit-module-boundary-types": "error",
		"@typescript-eslint/member-delimiter-style": "error",
		"@typescript-eslint/member-ordering": [
			"error",
			{
				"default": [
					// Index signature
					"signature",

					// Fields
					"public-static-field",
					"public-decorated-field",
					"public-instance-field",
					"public-abstract-field",
					"public-field",

					"protected-static-field",
					"protected-decorated-field",
					"protected-instance-field",
					"protected-abstract-field",
					"protected-field",

					"private-static-field",
					"private-decorated-field",
					"private-instance-field",
					"private-abstract-field",
					"private-field",

					// Constructors
					"public-constructor",
					"protected-constructor",
					"private-constructor",

					// Getters & Setters
					["public-static-get", "public-static-set"],
					["public-decorated-get", "public-decorated-set"],
					["public-instance-get", "public-instance-set"],
					["public-abstract-get", "public-abstract-set"],
					["public-get", "public-set"],

					["protected-static-get", "protected-static-set"],
					["protected-decorated-get", "protected-decorated-set"],
					["protected-instance-get", "protected-instance-set"],
					["protected-abstract-get", "protected-abstract-set"],
					["protected-get", "protected-set"],

					["private-static-get", "private-static-set"],
					["private-decorated-get", "private-decorated-set"],
					["private-instance-get", "private-instance-set"],
					["private-abstract-get", "private-abstract-set"],
					["private-get", "private-set"],

					// Methods
					"public-static-method",
					"public-decorated-method",
					"public-instance-method",
					"public-abstract-method",
					"public-method",

					"protected-static-method",
					"protected-decorated-method",
					"protected-instance-method",
					"protected-abstract-method",
					"protected-method",

					"private-static-method",
					"private-decorated-method",
					"private-instance-method",
					"private-abstract-method",
					"private-method"
				]
			}
		],
		"@typescript-eslint/method-signature-style": "error",
		"@typescript-eslint/naming-convention": "error",
		"@typescript-eslint/no-base-to-string": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-confusing-void-expression": "error",
		"@typescript-eslint/no-dynamic-delete": "error",
		"@typescript-eslint/no-extraneous-class": "error",
		"@typescript-eslint/no-invalid-void-type": "error",
		"@typescript-eslint/no-meaningless-void-operator": "error",
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
		"@typescript-eslint/no-parameter-properties": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/no-type-alias": "error",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/non-nullable-type-assertion-style": "error",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-includes": "error",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/prefer-nullish-coalescing": "error",
		"@typescript-eslint/prefer-optional-chain": "error",
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/prefer-reduce-type-parameter": "error",
		"@typescript-eslint/prefer-regexp-exec": "error",
		"@typescript-eslint/prefer-return-this-type": "error",
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/require-array-sort-compare": "error",
		"@typescript-eslint/sort-type-union-intersection-members": "error",
		"@typescript-eslint/strict-boolean-expressions": "error",
		"@typescript-eslint/switch-exhaustiveness-check": "error",
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/typedef": "error",
		"@typescript-eslint/unified-signatures": "error",

		// Extension rules
		"brace-style": "off",
		"@typescript-eslint/brace-style": ["error", "stroustrup"],
		"comma-dangle": "off",
		"@typescript-eslint/comma-dangle": "error",
		"comma-spacing": "off",
		"@typescript-eslint/comma-spacing": "error",
		"default-param-last": "off",
		"@typescript-eslint/default-param-last": "error",
		"dot-notation": "off",
		"@typescript-eslint/dot-notation": "error",
		"func-call-spacing": "off",
		"@typescript-eslint/func-call-spacing": "error",
		"indent": "off",
		"@typescript-eslint/indent": [
			"error",
			"tab",
			{
				"SwitchCase": 1
			}
		],
		"init-declarations": "off",
		"@typescript-eslint/init-declarations": "error",
		"keyword-spacing": "off",
		"@typescript-eslint/keyword-spacing": "error",
		"lines-between-class-members": "off",
		"@typescript-eslint/lines-between-class-members": "error",
		"no-array-constructor": "off",
		"@typescript-eslint/no-array-constructor": "error",
		"no-dupe-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": "error",
		"no-duplicate-imports": "off",
		"@typescript-eslint/no-duplicate-imports": [
			"error",
			{
				"includeExports": true
			}
		],
		"no-empty-function": "off",
		"@typescript-eslint/no-empty-function": "error",
		"no-extra-parens": "off",
		"@typescript-eslint/no-extra-parens": "error",
		"no-extra-semi": "off",
		"@typescript-eslint/no-extra-semi": "error",
		"no-implied-eval": "off",
		"@typescript-eslint/no-implied-eval": "error",
		"no-invalid-this": "off",
		"@typescript-eslint/no-invalid-this": "error",
		"no-loop-func": "off",
		"@typescript-eslint/no-loop-func": "error",
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": "error",
		"no-redeclare": "off",
		"@typescript-eslint/no-redeclare": "error",
		"no-restricted-imports": "off",
		"@typescript-eslint/no-restricted-imports": "error",
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": [
			"error",
			{
				"allow": ["Request", "Response"],
				"builtinGlobals": true,
				"hoist": "all"
			}
		],
		"no-throw-literal": "off",
		"@typescript-eslint/no-throw-literal": "error",
		"no-unused-expressions": "off",
		"@typescript-eslint/no-unused-expressions": [
			"error",
			{
				"allowTernary": true,
				"enforceForJSX": true
			}
		],
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"args": "all",
				"argsIgnorePattern": "^_",
				"caughtErrors": "all"
			}
		],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": [
			"error",
			{
				"functions": false
			}
		],
		"no-useless-constructor": "off",
		"@typescript-eslint/no-useless-constructor": "error",
		"object-curly-spacing": "off",
		"@typescript-eslint/object-curly-spacing": ["error", "always"],
		"padding-line-between-statements": "off",
		"@typescript-eslint/padding-line-between-statements": [
			"error",
			{
				"blankLine": "always",
				"prev": "*",
				"next": [
					"block",
					"block-like",
					"class",
					"do",
					"for",
					"function",
					"if",
					"multiline-const",
					"switch",
					"try",
					"while"
				]
			},
			{
				"blankLine": "always",
				"prev": [
					"block",
					"block-like",
					"class",
					"do",
					"for",
					"function",
					"if",
					"multiline-const",
					"switch",
					"try",
					"while"
				],
				"next": "*"
			},
			{
				"blankLine": "any",
				"prev": "*",
				"next": ["const"]
			},
			{
				"blankLine": "any",
				"prev": ["const"],
				"next": "*"
			}
		],
		"quotes": "off",
		"@typescript-eslint/quotes": ["error", "double"],
		"require-await": "off",
		"@typescript-eslint/require-await": "error",
		"no-return-await": "off",
		"@typescript-eslint/return-await": "error",
		"semi": "off",
		"@typescript-eslint/semi": ["error", "always"],
		"space-infix-ops": "off",
		"@typescript-eslint/space-infix-ops": "error",

		//jsdoc
		"jsdoc/newline-after-description": ["error", "never"],
		"jsdoc/require-param": "error",
		"jsdoc/require-param-type": "off",
		"jsdoc/require-returns-type": "off"

		// TODO: Configure React/JSX configuration
	},
	"overrides": [
		{
			"files": ["test/**"],
			"plugins": ["jest"],
			"extends": ["plugin:jest/recommended"]
		},
		{
			"files": ["server/**"],
			"rules": {
				"max-nested-callbacks": [
					"error",
					{
						"max": 1
					}
				]
			}
		}
	]
}
